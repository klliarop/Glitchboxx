#!/bin/bash
set -e

echo "[+] Enabling IP forwarding..."
sysctl -w net.ipv4.ip_forward=1

#iptables -I DOCKER-USER -i wg0 -s 10.9.0.0/24 -d 172.18.0.0/16 -j ACCEPT

# -- VPN user isolation (no inter-user traffic)
iptables -C FORWARD -i wg0 -s 10.9.0.0/24 -d 10.9.0.0/24 -j DROP 2>/dev/null || \
iptables -A FORWARD -i wg0 -s 10.9.0.0/24 -d 10.9.0.0/24 -j DROP

# -- VPN to shared network (172.28.0.0/16) - Scenario B
iptables -C FORWARD -i wg0 -s 10.9.0.0/24 -d 172.28.0.0/16 -j ACCEPT 2>/dev/null || \
iptables -A FORWARD -i wg0 -s 10.9.0.0/24 -d 172.28.0.0/16 -j ACCEPT

iptables -C FORWARD -o wg0 -s 172.28.0.0/16 -d 10.9.0.0/24 -j ACCEPT 2>/dev/null || \
iptables -A FORWARD -o wg0 -s 172.28.0.0/16 -d 10.9.0.0/24 -j ACCEPT

iptables -t nat -C POSTROUTING -s 10.9.0.0/24 -d 172.28.0.0/16 -j MASQUERADE 2>/dev/null || \
iptables -t nat -A POSTROUTING -s 10.9.0.0/24 -d 172.28.0.0/16 -j MASQUERADE

# -- DO NOT allow global access to 172.18, only per-user
# You do this dynamically in Python, remember?

#echo "[+] Allowing VPN traffic through Docker chain"
#iptables -C DOCKER-USER -i wg0 -s 10.9.0.0/24 -d 172.18.0.0/16 -j ACCEPT 2>/dev/null || \
#iptables -I DOCKER-USER -i wg0 -s 10.9.0.0/24 -d 172.18.0.0/16 -j ACCEPT

# Drop any other VPN → Docker traffic not explicitly allowed
#iptables -C FORWARD -i wg0 -s 10.9.0.0/24 -d 172.18.0.0/16 -j DROP 2>/dev/null || \
#iptables -A FORWARD -i wg0 -s 10.9.0.0/24 -d 172.18.0.0/16 -j DROP

  

# -- Accept RETURN traffic from 172.18 to VPN clients (Python adds matching inbound rule)
iptables -t nat -C POSTROUTING -s 10.9.0.0/24 -d 172.18.0.0/16 -j MASQUERADE 2>/dev/null || \
iptables -t nat -A POSTROUTING -s 10.9.0.0/24 -d 172.18.0.0/16 -j MASQUERADE


  
# Drop any VPN → Docker (172.18) traffic by default, unless allowed
iptables -C DOCKER-USER -i wg0 -s 10.9.0.0/24 -d 172.18.0.0/16 -j DROP 2>/dev/null || \
iptables -A DOCKER-USER -i wg0 -s 10.9.0.0/24 -d 172.18.0.0/16 -j DROP

iptables -C DOCKER-USER -i wg0 -s 172.18.0.0/16 -d 172.18.0.0/16 -j DROP 2>/dev/null || \
iptables -A DOCKER-USER -i wg0 -s 172.18.0.0/16 -d 172.18.0.0/16 -j DROP



echo "[+] Firewall base rules set. Per-user 172.18 rules will be added dynamically."




ISOLATED ctf_net:

docker network create \
  --subnet=172.18.0.0/16 \
  --opt com.docker.network.bridge.enable_icc=false \
  --opt com.docker.network.bridge.name=br-isolated \
  my-isolated-net




FINAL:

#!/bin/bash
set -e

echo "[+] Enabling IP forwarding..."
sysctl -w net.ipv4.ip_forward=1

VPN_NET="10.9.0.0/24"
DOCKER_NET1="172.18.0.0/16"
DOCKER_NET2="172.28.0.0/16"
DOCKER_NET3="172.29.0.0/16"
HOST_IFACE="wg0"
DOCKER_GATEWAY_1="172.28.0.1"
DOCKER_GATEWAY_2="172.29.0.1"

echo "[+] Blocking VPN inter-usaer traffic..."
iptables -C FORWARD -i $HOST_IFACE -s $VPN_NET -d $VPN_NET -j DROP 2>/dev/null || \
iptables -A FORWARD -i $HOST_IFACE -s $VPN_NET -d $VPN_NET -j DROP

echo "[+] Dropping VPN → Docker network traffic by default..."
for net in $DOCKER_NET1 $DOCKER_NET2 $DOCKER_NET3; do
    iptables -C DOCKER-USER -i $HOST_IFACE -s $VPN_NET -d $net -j DROP 2>/dev/null || \
    iptables -A DOCKER-USER -i $HOST_IFACE -s $VPN_NET -d $net -j DROP

    iptables -C DOCKER-USER -i $HOST_IFACE -s $net -d $net -j DROP 2>/dev/null || \
    iptables -A DOCKER-USER -i $HOST_IFACE -s $net -d $net -j DROP

    echo "[+] Enabling return traffic NAT for VPN → $net..."
    iptables -t nat -C POSTROUTING -s $VPN_NET -d $net -j MASQUERADE 2>/dev/null || \
    iptables -t nat -A POSTROUTING -s $VPN_NET -d $net -j MASQUERADE
done

echo "[+] Blocking VPN access to published Docker services at $DOCKER_GATEWAY_1..."
iptables -C INPUT -i $HOST_IFACE -d $DOCKER_GATEWAY_1 -j DROP 2>/dev/null || \
iptables -A INPUT -i $HOST_IFACE -d $DOCKER_GATEWAY_1 -j DROP

# Optional (redundant in many cases but catches pre-DNAT traffic)
iptables -t raw -C PREROUTING -i $HOST_IFACE -d $DOCKER_GATEWAY_1 -j DROP 2>/dev/null || \
iptables -t raw -A PREROUTING -i $HOST_IFACE -d $DOCKER_GATEWAY_1 -j DROP


echo "[+] Blocking VPN access to published Docker services at $DOCKER_GATEWAY_2..."
iptables -C INPUT -i $HOST_IFACE -d $DOCKER_GATEWAY_2 -j DROP 2>/dev/null || \
iptables -A INPUT -i $HOST_IFACE -d $DOCKER_GATEWAY_2 -j DROP

# Optional (redundant in many cases but catches pre-DNAT traffic)
iptables -t raw -C PREROUTING -i $HOST_IFACE -d $DOCKER_GATEWAY_2 -j DROP 2>/dev/null || \
iptables -t raw -A PREROUTING -i $HOST_IFACE -d $DOCKER_GATEWAY_2 -j DROP


echo "[+] Base firewall rules configured."
echo "[*] Use dynamic rules in Python to allow specific container IPs per user."





just keep
:
docker network create   --subnet=172.18.0.0/16   --opt com.docker.network.bridge.enable_icc=false   --opt com.docker.network.bridge.name=br-isolated   ctf_net
